# Ruff configuration with strictest settings
target-version = "py312"
line-length = 88

[lint]
select = ["ALL"]
ignore = [
    "D",      # pydocstyle - we'll handle docstrings separately
    "ANN101", # missing type annotation for self
    "ANN102", # missing type annotation for cls
    "COM812", # trailing comma - conflicts with formatter
    "ISC001", # implicit string concatenation - conflicts with formatter
    "TRY003", # Specific messages in exceptions
    "TRY300", # Consider else block - not always clearer
    "TRY301", # Abstract raise to inner function - not always clearer
    "TRY400", # Use logging.exception - we handle it explicitly
    "EM101",  # Exception string literals
    "EM102",  # Exception f-strings
    "S608",   # SQL injection - we control inputs
    "PYI034", # __aenter__ return type
    "TCH003", # stdlib imports in type checking - not needed
]

[lint.per-file-ignores]
"tests/*" = [
    "S101",    # use of assert
    "PLR2004", # magic values in tests
    "PLR0913", # too many arguments
    "DTZ011",  # date.today() in tests is fine
    "S105",    # hardcoded password in tests
    "S106",    # hardcoded password arguments in tests
    "SLF001",  # private member access - tests need this
    "ARG001",  # unused function arguments in mocks
    "ARG002",  # unused function arguments in fixtures
    "ANN001",  # missing type annotations in tests
    "ANN201",  # missing return type annotations in tests
    "ANN202",  # missing return type annotations for private functions
    "ANN401",  # typing.Any in test mocks
    "PLC0415", # imports in function - ok for test mocking
    "PTH123",  # use pathlib - not critical in tests
]
"src/quickexpense/main.py" = [
    "INP001",  # implicit namespace package
]
"src/quickexpense/api/routes.py" = [
    "TCH001", # Type checking block - needed for circular import
]
"src/quickexpense/services/quickbooks.py" = [
    "PLR2004", # Magic value 401 - HTTP status code
]
"src/quickexpense/services/quickbooks_oauth.py" = [
    "PLC0415", # imports inside functions - for URL encoding
]
"src/quickexpense/services/token_store.py" = [
    "BLE001", # broad exception handling for file operations
    "ANN401", # Any type in kwargs
]
# CLI script with different rules
"scripts/*" = [
    "T201",    # print statements are OK in CLI tools
    "S105",    # hardcoded password - these are OAuth URLs
    "S310",    # urlopen is fine for OAuth URLs
    "N802",    # do_GET is required by BaseHTTPRequestHandler
    "ANN",     # type annotations not critical for CLI script
    "E501",    # line length for HTML content
    "D",       # docstrings not critical for CLI script
    "BLE001",  # broad exception handling OK for CLI
    "PTH",     # path operations are fine with os.path
    "PLW2901", # loop variable reassignment OK
    "F841",    # unused variables in HTML generation
    "A002",    # format arg name from BaseHTTPRequestHandler
    "PLR2004", # magic values in CLI scripts
    "DTZ005",  # datetime without timezone in scripts
    "RUF001",  # ambiguous characters in output
    "PLR1722", # exit() vs sys.exit() - exit() is fine in scripts
    "EXE001",  # shebang in non-executable - ok for scripts
]
# Legacy files - will be removed/refactored later
"main.py" = ["ALL"]
"config.py" = ["ALL"]
"models.py" = ["ALL"]
"oauth_setup.py" = ["ALL"]
"quickbooks_client.py" = ["ALL"]

[lint.isort]
known-first-party = ["quickexpense"]

[lint.mccabe]
max-complexity = 10

[lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.field_validator",
    "pydantic.model_validator",
]

[lint.pylint]
max-args = 8  # Increased from 5 for complex agent configurations
max-branches = 12
max-returns = 6
max-statements = 50

[lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"
